// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.DataAccess;

namespace School.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220911141145_FixBugs")]
    partial class FixBugs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("School.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(1955),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " الصف الأول "
                        },
                        new
                        {
                            Id = 102,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3162),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " الصف الثاني      "
                        },
                        new
                        {
                            Id = 103,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3186),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  الصف الثالث  "
                        },
                        new
                        {
                            Id = 104,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3193),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "   الصف الرابع "
                        },
                        new
                        {
                            Id = 105,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3199),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  الصف الخامس  "
                        },
                        new
                        {
                            Id = 106,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3205),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  الصف السادس  "
                        },
                        new
                        {
                            Id = 107,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3253),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "   الصف السابع "
                        },
                        new
                        {
                            Id = 108,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3260),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " الصف الثامن"
                        },
                        new
                        {
                            Id = 109,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3266),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "   الصف التاسع "
                        },
                        new
                        {
                            Id = 110,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3273),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " الصف العاشر "
                        },
                        new
                        {
                            Id = 111,
                            Capacity = 0,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(3278),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "   الصف الحادي عشر"
                        });
                });

            modelBuilder.Entity("School.Data.Entities.Decisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllowToCreatMarks")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowToUpdatedMarks")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAllowedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAllowedTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAllowedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAllowedTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("School.Data.Entities.Duration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Duration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 536, DateTimeKind.Local).AddTicks(9313),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الشهر الأول "
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(619),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الشهر الثاني "
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(646),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الشهر الثالث "
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(654),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الشهر الرابع "
                        });
                });

            modelBuilder.Entity("School.Data.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 534, DateTimeKind.Local).AddTicks(4588),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "ذكر"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 534, DateTimeKind.Local).AddTicks(5990),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "أنثى"
                        });
                });

            modelBuilder.Entity("School.Data.Entities.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FSkillsTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("FinalSkillsTypeId")
                        .HasColumnType("int");

                    b.Property<float?>("FinalTermValue")
                        .HasColumnType("real");

                    b.Property<float?>("FirstTermValue")
                        .HasColumnType("real");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAllowToAdd")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MSkillsTypeId")
                        .HasColumnType("int");

                    b.Property<float?>("MidTermValue")
                        .HasColumnType("real");

                    b.Property<string>("Notice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("FSkillsTypeId");

                    b.HasIndex("FinalSkillsTypeId");

                    b.HasIndex("MSkillsTypeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Mark");
                });

            modelBuilder.Entity("School.Data.Entities.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Notices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("School.Data.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Semester");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 536, DateTimeKind.Local).AddTicks(6333),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الفصل الدراسي الأول "
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 536, DateTimeKind.Local).AddTicks(8051),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الفصل الدراسي الثاني"
                        });
                });

            modelBuilder.Entity("School.Data.Entities.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillsTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("DurationId");

                    b.HasIndex("SkillsTypeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("School.Data.Entities.SkillsStudentBehavior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Notice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillsTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("DurationId");

                    b.HasIndex("SkillsTypeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SkillsStudentBehavior");
                });

            modelBuilder.Entity("School.Data.Entities.SkillsSuggestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SkillsSuggestions");
                });

            modelBuilder.Entity("School.Data.Entities.SkillsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillsType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(8774),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " ممتاز"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(9994),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "جيد جدا "
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(17),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "   جيد  "
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(24),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  مقبول   "
                        });
                });

            modelBuilder.Entity("School.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOP")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("GenderId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("School.Data.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            ClassId = 101,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(4422),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 100
                        },
                        new
                        {
                            Id = 200,
                            ClassId = 101,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6836),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 500
                        },
                        new
                        {
                            Id = 300,
                            ClassId = 101,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6868),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تربية وطنية وحياتية ",
                            TeacherId = 100
                        },
                        new
                        {
                            Id = 400,
                            ClassId = 101,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6876),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 100
                        },
                        new
                        {
                            Id = 500,
                            ClassId = 101,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6882),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	حاسوب  ",
                            TeacherId = 100
                        },
                        new
                        {
                            Id = 600,
                            ClassId = 101,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6889),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 100
                        },
                        new
                        {
                            Id = 700,
                            ClassId = 102,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6895),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 200
                        },
                        new
                        {
                            Id = 800,
                            ClassId = 102,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6902),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 500
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 102,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6908),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تربية وطنية وحياتية ",
                            TeacherId = 200
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 102,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6915),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 200
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 102,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6922),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	حاسوب  ",
                            TeacherId = 200
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 102,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6929),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 200
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6935),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 300
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6944),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 500
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6950),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تنشئة وطنية واجتماعية ",
                            TeacherId = 300
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6956),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 300
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6963),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	حاسوب  ",
                            TeacherId = 300
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6969),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 300
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 103,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6976),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " علوم عامة  ",
                            TeacherId = 300
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6982),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 400
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6989),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 500
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(6995),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تنشئة وطنية واجتماعية  ",
                            TeacherId = 400
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7002),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 400
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7009),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	حاسوب  ",
                            TeacherId = 400
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7016),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 400
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 104,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7022),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " علوم عامة  ",
                            TeacherId = 400
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7029),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 600
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7035),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 700
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7042),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " دراسات اجتماعية     ",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7048),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7055),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	علوم  ",
                            TeacherId = 1000
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7061),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1000
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 105,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7067),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا   ",
                            TeacherId = 1000
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7074),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 600
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7080),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 700
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7086),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " دراسات اجتماعية",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7093),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7100),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	علوم  ",
                            TeacherId = 1000
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7105),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1000
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 106,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7112),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا   ",
                            TeacherId = 1000
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7118),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 1100
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7124),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 700
                        },
                        new
                        {
                            Id = 43,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7129),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " دراسات اجتماعية",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 44,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7136),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 45,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7142),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	علوم  ",
                            TeacherId = 1200
                        },
                        new
                        {
                            Id = 46,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7148),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1200
                        },
                        new
                        {
                            Id = 47,
                            ClassId = 107,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7155),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا   ",
                            TeacherId = 1200
                        },
                        new
                        {
                            Id = 48,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7248),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 1100
                        },
                        new
                        {
                            Id = 49,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7258),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 700
                        },
                        new
                        {
                            Id = 50,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7264),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " دراسات اجتماعية ",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 51,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7270),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 52,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7276),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	علوم  ",
                            TeacherId = 1200
                        },
                        new
                        {
                            Id = 53,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7283),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1200
                        },
                        new
                        {
                            Id = 54,
                            ClassId = 108,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7289),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا",
                            TeacherId = 1200
                        },
                        new
                        {
                            Id = 55,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7295),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 1300
                        },
                        new
                        {
                            Id = 56,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7301),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 1400
                        },
                        new
                        {
                            Id = 57,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7307),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " دراسات اجتماعية ",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 58,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7313),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 59,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7320),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	علوم  ",
                            TeacherId = 1600
                        },
                        new
                        {
                            Id = 60,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7327),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1500
                        },
                        new
                        {
                            Id = 61,
                            ClassId = 109,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7333),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا   ",
                            TeacherId = 1500
                        },
                        new
                        {
                            Id = 62,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7339),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 1300
                        },
                        new
                        {
                            Id = 63,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7344),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 1400
                        },
                        new
                        {
                            Id = 64,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7351),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تاريخ وجغرافيا      ",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 65,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7356),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 66,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7363),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الفيزياء",
                            TeacherId = 1600
                        },
                        new
                        {
                            Id = 67,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7370),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "كيمياء",
                            TeacherId = 1600
                        },
                        new
                        {
                            Id = 68,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7377),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "أحياء",
                            TeacherId = 1600
                        },
                        new
                        {
                            Id = 69,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7383),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1500
                        },
                        new
                        {
                            Id = 70,
                            ClassId = 110,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7389),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا   ",
                            TeacherId = 1600
                        },
                        new
                        {
                            Id = 71,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7395),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " 	لغة عربية  ",
                            TeacherId = 1100
                        },
                        new
                        {
                            Id = 72,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7401),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "الرياضيات",
                            TeacherId = 1500
                        },
                        new
                        {
                            Id = 73,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7407),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "  لغة انجليزية  ",
                            TeacherId = 1400
                        },
                        new
                        {
                            Id = 74,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7414),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تربية إسلامية ",
                            TeacherId = 900
                        },
                        new
                        {
                            Id = 75,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7421),
                            IsArchive = false,
                            IsDelete = false,
                            Name = " تاريخ   ",
                            TeacherId = 800
                        },
                        new
                        {
                            Id = 76,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7428),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "جغرافيا",
                            TeacherId = 1700
                        },
                        new
                        {
                            Id = 77,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7435),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "ثقافة عامة",
                            TeacherId = 1500
                        },
                        new
                        {
                            Id = 78,
                            ClassId = 111,
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 537, DateTimeKind.Local).AddTicks(7441),
                            IsArchive = false,
                            IsDelete = false,
                            Name = "تكنولوجيا   ",
                            TeacherId = 1600
                        });
                });

            modelBuilder.Entity("School.Data.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppointmentYear")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teacher");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(1167),
                            EmailAddress = "",
                            FirstName = "ألاء",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "أبو شعير",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 200,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4202),
                            EmailAddress = "",
                            FirstName = "مها  ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "ستوم",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 300,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4240),
                            EmailAddress = "",
                            FirstName = "إيمان ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "الجخبير ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 400,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4248),
                            EmailAddress = "",
                            FirstName = "رندة ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "الزيناتي ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 500,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4255),
                            EmailAddress = "",
                            FirstName = "علا",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "محسن",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 600,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4262),
                            EmailAddress = "",
                            FirstName = "إسلام  ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "البرعي",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 700,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4268),
                            EmailAddress = "",
                            FirstName = "رانيا",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "حسان",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 800,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4276),
                            EmailAddress = "",
                            FirstName = "اسلام  ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "أبو ندى",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 900,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4410),
                            EmailAddress = "",
                            FirstName = " رنا ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "أبو حمد ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1000,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4421),
                            EmailAddress = "",
                            FirstName = "وفاء ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "نصار  ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1100,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4427),
                            EmailAddress = "",
                            FirstName = " رشا ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = " الخضري ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1200,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4434),
                            EmailAddress = "",
                            FirstName = "نداء ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "الغولة ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1300,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4442),
                            EmailAddress = "",
                            FirstName = "هبة  ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "وشاح",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1400,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4449),
                            EmailAddress = "",
                            FirstName = "هديل",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "عكاشة ",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1500,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4456),
                            EmailAddress = "",
                            FirstName = "سحر ",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "لبد",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1600,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4464),
                            EmailAddress = "",
                            FirstName = "اسلام",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "أبو شمالة",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 1700,
                            AppointmentYear = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2022, 9, 11, 17, 11, 42, 538, DateTimeKind.Local).AddTicks(4471),
                            EmailAddress = "",
                            FirstName = "أمل",
                            IsArchive = false,
                            IsDelete = false,
                            LastName = "ياسين ",
                            PhoneNumber = ""
                        });
                });

            modelBuilder.Entity("School.Data.Entities.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("School.Data.Entities.StudentApp", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOP")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasIndex("ClassId");

                    b.HasIndex("GenderId");

                    b.HasIndex("SemesterId");

                    b.HasDiscriminator().HasValue("StudentApp");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("School.Data.Entities.Mark", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.SkillsType", "FSkillsType")
                        .WithMany()
                        .HasForeignKey("FSkillsTypeId");

                    b.HasOne("School.Data.Entities.SkillsType", "FinalSkillsType")
                        .WithMany()
                        .HasForeignKey("FinalSkillsTypeId");

                    b.HasOne("School.Data.Entities.SkillsType", "MSkillsType")
                        .WithMany()
                        .HasForeignKey("MSkillsTypeId");

                    b.HasOne("School.Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("FinalSkillsType");

                    b.Navigation("FSkillsType");

                    b.Navigation("MSkillsType");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Data.Entities.Notice", b =>
                {
                    b.HasOne("School.Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School.Data.Entities.Skills", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Duration", "Duration")
                        .WithMany()
                        .HasForeignKey("DurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.SkillsType", "SkillsType")
                        .WithMany()
                        .HasForeignKey("SkillsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Duration");

                    b.Navigation("SkillsType");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Data.Entities.SkillsStudentBehavior", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Duration", "Duration")
                        .WithMany()
                        .HasForeignKey("DurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.SkillsType", "SkillsType")
                        .WithMany()
                        .HasForeignKey("SkillsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Duration");

                    b.Navigation("SkillsType");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Data.Entities.SkillsSuggestions", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Data.Entities.Student", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Gender");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("School.Data.Entities.Subject", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Data.Entities.StudentApp", b =>
                {
                    b.HasOne("School.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Data.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Gender");

                    b.Navigation("Semester");
                });
#pragma warning restore 612, 618
        }
    }
}
